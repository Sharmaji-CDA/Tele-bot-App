from telegram import Update
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler, CallbackContext, filters
)
import logging

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# Responses for commands
RESPONSES = {
    "ok": "AGR APNE PAYMENT KAR DI HAI, YA APKI PAYMENT PAHLE SE JAMA HAI TO APKI GAME OK HAIтЭд\n\n"
          "ЁЯЖЧ рдЕрдкрдиреА рдЧреЗрдо рдХрд╛ рдЯреЛрдЯрд▓ рдЪреЗрдХЁЯУЭ рдХрд░рдХреЗ рдЧреЗрдо рдкреЛрд╕реНрдЯ рдХрд░реЗ рдЯреЛрдЯрд▓ рдЧрд▓рдд рдкрд░ рдЖрдкрдХреЛ рд╕рд┐рд░реНрдл тДЭЁЭФ╝ЁЭФ╜ЁЭХМтДХЁЭФ╗ рдХрд┐рдпрд╛ рдЬрд╛рдПрдЧрд╛ ЁЯСН",
    "payment": "рд╕рднреА рднреБрдЧрддрд╛рди рд╕рдВрдЦреНрдпрд╛ рдкрд░\n\n"
               "рдкреЗрдЯреАрдПрдо : ЁЯФЬ 8126881875\n"
               "рдлрд╝реЛрди рдкреЗ : ЁЯФЬ 8126881875\n"
               "рдЧреВрдЧрд▓ рдкреЗ : ЁЯФЬ 8126881875\n\n"
               "рднрд╛рд╡ 10 рдХрд╛ 950\n\n"
               "A.V.A.U online game club\n\n"
               "рдЗрд╕рдХреЗ рдЖрд▓рд╛рд╡рд╛ рдЖрдк рдЕрдЧрд░ рдХрд┐рд╕реА рдФрд░ рдирдВрдмрд░ рдкрд░ рдкреЗрдореЗрдВрдЯ рдХрд░рддреЗ рд╣реИрдВ рддреЛ рдЙрд╕рдХреА рдЬрд┐рдореНрдореЗрджрд╛рд░реА рдЖрдкрдХреА рд╣реЛрдЧреА\n\n"
               "(ADMIN)\n\n"
               "https://t.me/AVAU_ONLINE_GAME_CLUB\n"
               "https://t.me/Payment_admin_AVAU",
    "rules": "RATE : 10 ke 950 тЭдтАНЁЯФе\n\n"
             "ЁЯСЙЁЯП╗(TIME TABLE)\n"
             "DB : 03:00 LAST\n"
             "SG : 04:30 LAST\n"
             "FD : 05:50 LAST\n"
             "GB : 08:50 LAST\n"
             "GL : 11:25 LAST\n"
             "DS : 04:00 LAST\n\n"
             "PAYMENT NO. ЁЯТ░\n"
             "*paytm\n"
             "*8126881875\n"
             "*PhonePe\n"
             "*8126881875\n"
             "*Google Pay\n"
             "*8126881875\n\n"
             "тЭдтАНЁЯФеRULESтЭдтАНЁЯФе\n"
             "01. рдЯреЛрдЯрд▓ рдЧрд╝рд▓рдд рд╣реЛрдиреЗ рдкрд░ рд╣рд╛рдл ( рдЖрджрд┐ ) рдкрд╛рд╕рд┐рдВрдЧ рджреА рдЬрд╛рдПрдЧреА ... (TRUNCATED FOR BREVITY)",
    'lock' : "тЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦ\n"
            "тА╝тА╝тА╝тА╝тА╝тА╝тА╝тА╝тА╝тА╝тА╝тА╝тА╝рдХреГрдкрдпрд╛ рдзреНрдпрд╛рди рджреЗрдВ ... (LOCK MESSAGE CONTENT)",
    "unlock": "тЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦ\n"
              "тА╝тА╝тА╝тА╝тА╝тА╝тА╝тА╝тА╝тА╝тА╝тА╝тА╝рдХреГрдкрдпрд╛ рдзреНрдпрд╛рди рджреЗрдВ ... (UNLOCK MESSAGE CONTENT)",
}

# Command handlers
async def command_handler(update: Update, context: CallbackContext):
    command = update.message.text.lower()
    if command in RESPONSES:
        await update.message.reply_text(RESPONSES[command])

# Timer-based response
message_count = {}

async def set_timer(update: Update, context: CallbackContext):
    chat_id = update.message.chat_id
    message_count[chat_id] = 0
    await update.message.reply_text("Timer set! Responding after 10 messages.")

async def count_messages(update: Update, context: CallbackContext):
    chat_id = update.message.chat_id
    if chat_id in message_count:
        message_count[chat_id] += 1
        if message_count[chat_id] == 10:
            message_count.pop(chat_id)  # Reset the count
            await update.message.reply_text(
                "тЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦтЮЦ\n"
                "тА╝тА╝тА╝тА╝тА╝тА╝тА╝тА╝тА╝тА╝тА╝тА╝тА╝рдХреГрдкрдпрд╛ рдзреНрдпрд╛рди рджреЗрдВ рд╣рдо рдХрд┐рд╕реА рд╕реЗ рдХрд┐рд╕реА рдХреЗ ... (TIMER RESPONSE)"
            )

# Main function to set up the bot
def main():
    app = ApplicationBuilder().token("7722538157:AAE4z-CEsS8nsuhwiU7zviphIRLb5QQ5KH4").build()

    # Register commands
    app.add_handler(CommandHandler("ok", command_handler))
    app.add_handler(CommandHandler("payment", command_handler))
    app.add_handler(CommandHandler("rules", command_handler))
    app.add_handler(CommandHandler("lock", command_handler))
    app.add_handler(CommandHandler("unlock", command_handler))

    # Register set timer command and message counting
    app.add_handler(CommandHandler("set_timer", set_timer))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, count_messages))

    # Start the bot
    app.run_polling()

if __name__ == '__main__':
    main()
